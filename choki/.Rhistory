install.packages(c("ape", "arules", "blob", "bookdown", "broom", "chatgpt", "chron", "classInt", "cli", "commonmark", "datawizard", "dbplyr", "deSolve", "distributional", "dplyr", "dtplyr", "emmeans", "flextable", "FNN", "forecast", "future", "gapminder", "gdtools", "ggiraph", "ggmap", "ggsci", "glmmTMB", "googledrive", "googlesheets4", "gtable", "haven", "Hmisc", "hms", "htmltools", "htmlwidgets", "insight", "intervals", "lavaan", "learnr", "lme4", "magick", "marginaleffects", "modelr", "officer", "openssl", "parallelly", "pillar", "posterior", "ps", "raster", "RcppParallel", "renv", "rgdal", "rgeos", "rlang", "rstantools", "seriation", "sf", "spatstat.data", "spatstat.geom", "spatstat.random", "spatstat.utils", "spData", "spdep", "styler", "systemfit", "targets", "terra", "testthat", "tibble", "tidybayes", "tidytable", "tmbstan", "triebeard", "TSP", "vctrs", "wk", "xfun", "XML"))
library(pak)
pkg_search()
?pak
pak_update()
pak_update()
library(pak)
pak_update()
?pak_update()
pkg_history()
install.packages(c("arules", "blob", "chatgpt"))
install.packages(c("ape", "bookdown", "broom", "chron", "classInt", "cli", "commonmark", "datawizard", "dbplyr", "deSolve", "distributional", "dplyr", "dtplyr", "emmeans", "flextable", "FNN", "forecast", "future", "gapminder", "gdtools", "ggiraph", "ggmap", "ggsci", "glmmTMB", "googledrive", "googlesheets4", "gtable", "haven", "Hmisc", "hms", "htmltools", "htmlwidgets", "insight", "intervals", "lavaan", "learnr", "lme4", "magick", "marginaleffects", "modelr", "officer", "openssl", "parallelly", "pillar", "posterior", "ps", "raster", "RcppParallel", "renv", "rgdal", "rgeos", "rlang", "rstantools", "seriation", "sf", "spatstat.data", "spatstat.geom", "spatstat.random", "spatstat.utils", "spData", "spdep", "styler", "systemfit", "targets", "terra", "testthat", "tibble", "tidybayes", "tidytable", "tmbstan", "triebeard", "TSP", "vctrs", "wk", "xfun", "XML"))
install.packages(c("MASS", "survival"), lib="/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library")
install.packages(c("ape", "bookdown", "broom", "chron", "classInt", "cli", "commonmark", "datawizard", "dbplyr", "deSolve", "distributional", "dplyr", "dtplyr", "emmeans", "flextable", "FNN", "forecast", "future", "gapminder", "gdtools", "ggiraph", "ggmap", "ggsci", "glmmTMB", "googledrive", "googlesheets4", "gtable", "haven", "Hmisc", "hms", "htmltools", "htmlwidgets", "insight", "intervals", "lavaan", "learnr", "lme4", "magick", "marginaleffects", "modelr", "officer", "openssl", "parallelly", "pillar", "posterior", "ps", "raster", "RcppParallel", "renv", "rgdal", "rgeos", "rlang", "rstantools", "seriation", "sf", "spatstat.data", "spatstat.geom", "spatstat.random", "spatstat.utils", "spData", "spdep", "styler", "systemfit", "targets", "terra", "testthat", "tibble", "tidybayes", "tidytable", "tmbstan", "triebeard", "TSP", "vctrs", "wk", "xfun", "XML"))
pkg_install(c("ape", "bookdown", "broom", "chron", "classInt", "cli", "commonmark", "datawizard", "dbplyr", "deSolve", "distributional", "dplyr", "dtplyr", "emmeans", "flextable", "FNN", "forecast", "future", "gapminder", "gdtools", "ggiraph", "ggmap", "ggsci", "glmmTMB", "googledrive", "googlesheets4", "gtable", "haven", "Hmisc", "hms", "htmltools", "htmlwidgets", "insight", "intervals", "lavaan", "learnr", "lme4", "magick", "marginaleffects", "modelr", "officer", "openssl", "parallelly", "pillar", "posterior", "ps", "raster", "RcppParallel", "renv", "rgdal", "rgeos", "rlang", "rstantools", "seriation", "sf", "spatstat.data", "spatstat.geom", "spatstat.random", "spatstat.utils", "spData", "spdep", "styler", "systemfit", "targets", "terra", "testthat", "tibble", "tidybayes", "tidytable", "tmbstan", "triebeard", "TSP", "vctrs", "wk", "xfun", "XML"))
pak::pkg_install(c("ape", "bookdown", "broom", "chron", "classInt", "cli", "commonmark", "datawizard", "dbplyr", "deSolve", "distributional", "dplyr", "dtplyr", "emmeans", "flextable", "FNN", "forecast", "future", "gapminder", "gdtools", "ggiraph", "ggmap", "ggsci", "glmmTMB", "googledrive", "googlesheets4", "gtable", "haven", "Hmisc", "hms", "htmltools", "htmlwidgets", "insight", "intervals", "lavaan", "learnr", "lme4", "magick", "marginaleffects", "modelr", "officer", "openssl", "parallelly", "pillar", "posterior", "ps", "raster", "RcppParallel", "renv", "rgdal", "rgeos", "rlang", "rstantools", "seriation", "sf", "spatstat.data", "spatstat.geom", "spatstat.random", "spatstat.utils", "spData", "spdep", "styler", "systemfit", "targets", "terra", "testthat", "tibble", "tidybayes", "tidytable", "tmbstan", "triebeard", "TSP", "vctrs", "wk", "xfun", "XML"))
install.packages("MASS", lib="/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library")
install.packages("survival", lib="/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library")
create_project_directory <- function(project_name) {
dir.create(project_name)
setwd(project_name)
dir.create("docs")
dir.create("examples")
dir.create("src/main")
dir.create("src/test")
dir.create("scripts")
writeLines("#", file = "README.md")
writeLines("# LICENSE", file = "LICENSE")
writeLines(".RData", file = ".gitignore")
writeLines(".Rhistory", file = ".gitignore")
writeLines("src/test/testthat.R", file = ".gitignore")
file.create("docs/index.md")
file.create("docs/getting-started.md")
file.create("docs/user-guide.md")
file.create("scripts/analysis.R")
file.create("scripts/preprocessing.R")
file.create("scripts/visualization.R")
}
create_project_directory <- function(project_name) {
dir.create(project_name)
setwd(project_name)
dir.create("docs")
dir.create("examples")
dir.create("src/main")
dir.create("src/test")
dir.create("R")
writeLines("#", file = "README.md")
writeLines("# LICENSE", file = "LICENSE")
writeLines(".RData", file = ".gitignore")
writeLines(".Rhistory", file = ".gitignore")
writeLines("src/test/testthat.R", file = ".gitignore")
file.create("docs/index.md")
file.create("docs/getting-started.md")
file.create("docs/user-guide.md")
file.create("R/analysis.R")
file.create("R/preprocessing.R")
file.create("R/visualization.R")
}
create_project_directory <- function(project_name) {
dir.create(project_name)
setwd(project_name)
dir.create("docs")
dir.create("examples")
dir.create("src/main")
dir.create("src/test")
dir.create("R")
writeLines("#", file = "README.md")
writeLines("# LICENSE", file = "LICENSE")
writeLines(".RData", file = ".gitignore")
writeLines(".Rhistory", file = ".gitignore")
writeLines("src/test/testthat.R", file = ".gitignore")
file.create("docs/index.md")
file.create("docs/getting-started.md")
file.create("docs/user-guide.md")
file.create("R/analysis.R")
file.create("R/preprocessing.R")
file.create("R/visualization.R")
}
create_project_directory("choki")
ls()
cwd()
getwd()
library(jjmR)
library(ggplot2)
library(tidyverse)
?jjmR
# mod0.00 <- runit(geth("0.00"),pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjms")
getwd()
rm(m1)
geth <- function(mod,h=hyp) paste0(h,"_", mod) # Package? Or keep?
hyp=1
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m1 <- runit(geth("1.01"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m2 <- runit(geth("1.02"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
Jack mackerel assessment
m1 <- runit(geth("1.01"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m2 <- runit(geth("1.02"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m3 <- runit(geth("1.03"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m4 <- runit(geth("1.04"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m4 <- runit(geth("1.04"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m4 <- runit(geth("1.04"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m5 <- runit(geth("1.05"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
mods <- combineModels(m0,m1,m2,m3,m4,m5)
m3 <- runit(geth("1.03"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m3 <- runit(geth("1.03"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
mods <- combineModels(m0,m1,m2,m3,m4,m5)
names(mods)
modnm <- "model_1.05"
tidy_jjm <- tidy_JJM(mods)
get_selectivities
selectivities <- get_selectivities(tidy_jjm)
plot_selectivities(selectivities)
selectivities <- get_selectivities(tidy_jjm)
selectivities <- get_selectivities(m5)
plot_selectivities(selectivities)
plot_selectivities(selectivities,fleet="ind")
index_fits <- tidy_jjm$index_fits
index_fits
index_fits %>%
ggplot() +
geom_pointrange(aes(year, observed_ind, ymin = observed_ind - 1.96 * observed_se, ymax =  observed_ind + 1.96 * observed_se), alpha = 0.5) +
geom_path(aes(year, pred_ind, color = model)) +
facet_grid( fleet_name~., scales = "free_y") +
scale_x_continuous(name = "Year", guide = guide_axis(n.dodge = 2)) +
scale_y_continuous(name = "Index Values") + ggthemes::theme_few(base_size=16)
plot(mods,combine=TRUE,what='ssb',stack=F)
plot(mods,combine=TRUE,what='recruitment',stack=F)
names(df1)<-c("type","year","est","std","lb","ub")
ret0 <- retro(model = m0, n= 8, output = "results", exec="../../src/jjms",parallel=TRUE)
ret3 <- retro(model = m3, n= 8, output = "results", exec="../../src/jjms",parallel=TRUE)
plot(ret3) # all plots
plot(ret0) # all plots
plot(ret0,title="Moodel 0") # all plots
plot(ret3) # all plots
ret5 <- retro(model = m5, n= 8, output = "results", exec="../../src/jjms",parallel=TRUE)
plot(ret3,type="SSB") # all plots
plot(ret5,type="SSB") # all plots
ret4 <- retro(model = m4, n= 8, output = "results", exec="../../src/jjms",parallel=TRUE)
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
# Retro try ----
ret0 <- retro(model = m0, n= 8, output = "results", exec="../../src/jjms",parallel=TRUE)
# Retro try ----
ret0 <- retro(model = m0, n= 8, output = "results", exec="../../src/jjms",parallel=TRUE)
plot(ret0,title="Moodel 0") # all plots
m1 <- runit(geth("1.01"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m2 <- runit(geth("1.02"),pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
mods <- combineModels(m0,m1,m2,m3,m4,m5)
names(mods)
plot(mods, var="SSB") # only SSB
tidy_jjm <- tidy_JJM(mods)
selectivities <- get_selectivities(mods)
plot_selectivities(selectivities)
selectivities <- get_selectivities(mods[[c(1,4)]])
str(mods)
glimpse (mods)
glimpse(mods)
names(mods)
names(mods[1:2])
selectivities <- get_selectivities(mods[c(1,4)])
plot_selectivities(selectivities)
plot_selectivities(selectivities,fleet="ind")
selectivities
plot_selectivities(selectivities |> filter(year>2000),fleet="ind")
plot_selectivities(selectivities |> filter(year>2000),fleet="ind") + ggplot(color="black")
plot_selectivities(selectivities)
plot(mods,combine=TRUE,what='ssb',stack=F)
plot(mods,combine=TRUE,what='recruitment',stack=F)
plot(mods[c(1,4)],combine=TRUE,what='recruitment',stack=F)
plot(mods[c(1,4)],combine=TRUE,what='recruitment',stack=F)
plot(mods[[c(1,4)]],combine=TRUE,what='recruitment',stack=F)
df1<-as_tibble(m0[[1]][[5]][[1]]$df1)
names(df1)<-c("type","year","est","std","lb","ub")
df<-rbind(df1 |> mutate(model="base"))
df <- df %>% mutate(
year=as.numeric(year),
est=as.numeric(est),
std=as.numeric(std),
lb =as.numeric(lb),
ub =as.numeric(ub)
)
unique(df$type)
blim <- df |> filter(type=="SSB0_Dynamic") |>  group_by(model) |> summarise(min(est))
blim
df %>%
ggplot(aes(x=year,y=est,ymin=lb,ymax=ub,color=model,fill=model)) +
geom_ribbon(alpha=.4)+ geom_line(size=.5,alpha=.5) + expand_limits(y=0) + ggthemes::theme_few() + ylab("Estimates") +
facet_wrap(type~.,scales="free")
df1<-as_tibble(m3[[1]][[5]][[1]]$df1)
names(df1)<-c("type","year","est","std","lb","ub")
df<-rbind(df1 |> mutate(model="base"))
df <- df %>% mutate(
year=as.numeric(year),
est=as.numeric(est),
std=as.numeric(std),
lb =as.numeric(lb),
ub =as.numeric(ub)
)
unique(df$type)
blim <- df |> filter(type=="SSB0_Dynamic") |>  group_by(model) |> summarise(min(est))
blim
df %>%
ggplot(aes(x=year,y=est,ymin=lb,ymax=ub,color=model,fill=model)) +
geom_ribbon(alpha=.4)+ geom_line(size=.5,alpha=.5) + expand_limits(y=0) + ggthemes::theme_few() + ylab("Estimates") +
facet_wrap(type~.,scales="free")
modres<- mods
for(i in 1:Nreps) {
#dir.mod <- paste(modname, i, sep =".")
#modres[[i]] <- readJJM(dir.mod, path="config", input="input")
if(i == 1) {
modlike <- matrix(ncol = Nreps, nrow = nrow(summary(modres[[i]])$like))
}
modlike[,i] <- summary(modres[[i]])$like
Biomat <- modres[[i]][[1]]$output$Stock_1$TotBiom
Bend[i] <- Biomat[nrow(Biomat), 2]
parex <- paste("modres[[i]][[1]]$parameters$", par2change, sep = "")
parvec[i] <- eval(parse(text = parex))
}
Nreps=5
for(i in 0:Nreps) {
#dir.mod <- paste(modname, i, sep =".")
#modres[[i]] <- readJJM(dir.mod, path="config", input="input")
if(i == 1) {
modlike <- matrix(ncol = Nreps, nrow = nrow(summary(modres[[i]])$like))
}
modlike[,i] <- summary(modres[[i]])$like
Biomat <- modres[[i]][[1]]$output$Stock_1$TotBiom
Bend[i] <- Biomat[nrow(Biomat), 2]
parex <- paste("modres[[i]][[1]]$parameters$", par2change, sep = "")
parvec[i] <- eval(parse(text = parex))
}
## Two different ways to gets NUTS working. First is to use the
## Hessian (metric) just like with the RMW. Note the control argument.
## Two different ways to gets NUTS working. First is to use the
## Hessian (metric) just like with the RMW. Note the control argument.
iter <- 2000 # maybe too many...depends are number cores...I used 8...
chains=8
getwd()
library(jjmR)
library(ggplot2)
library(tidyverse)
geth <- function(mod,h=hyp) paste0(h,"_", mod) # Package? Or keep?
hyp=1
# read in results from Chosam from doc ---
chosam<-read_csv("chosam.csv")
m0 <- readJJM(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m0 <- readJJM(geth("1.00") ,exec="../../src/jjms")
mod0.04 <- readJJM(geth("0.1"),pdf=TRUE,portrait=F,exec="../src/jjms")
library(jjmR)
library(ggplot2)
library(tidyverse)
?jjmR
geth <- function(mod,h=hyp) paste0(h,"_", mod) # Package? Or keep?
hyp=1
m0 <- readJJM(geth("1.00"), path = "config", input = "input")
m0 <- readJJM(geth("1.00"), path = "config", input = "input")
m1 <- readJJM(geth("1.01"), path = "config", input = "input")
m2 <- readJJM(geth("1.02"), path = "config", input = "input")
m3 <- readJJM(geth("1.03"), path = "config", input = "input")
m4 <- readJJM(geth("1.04"), path = "config", input = "input")
m5 <- readJJM(geth("1.05"), path = "config", input = "input")
mods <- combineModels(m0,m1,m2,m3,m4,m5)
names(mods)
tidy_mods <- tidy_JJM(mods)
index_fits <- tidy_mods$index_fits
index_fits %>%
ggplot() +
geom_pointrange(aes(year, observed_ind, ymin = observed_ind - 1.96 * observed_se, ymax =  observed_ind + 1.96 * observed_se), alpha = 0.5) +
geom_path(aes(year, pred_ind, color = model)) +
facet_wrap(~ fleet_name, scales = "free_y") +
scale_x_continuous(name = "Year", guide = guide_axis(n.dodge = 2)) +
scale_y_continuous(name = "Index Values")
index_fits %>%
mutate(residual = pred_ind - observed_ind ) %>%
group_by(fleet_name, model) %>%
mutate(standardized_residual = residual / sd(residual)) %>%
filter(!is.na(standardized_residual)) %>%
ggplot() +
geom_hline(yintercept = 0,linetype = 2) +
geom_col(aes(x = year, y =standardized_residual, fill =model), position = position_dodge(width = 0.5)) +
facet_wrap(~ fleet_name, scales = "free_x") +
scale_x_continuous(name = "Year", guide = guide_axis(n.dodge = 2)) +
scale_y_continuous(name = "Standardized Residuals")
library(tidyr)
theme_set(theme_jjm(base_size = 15))
index_fits %>%
mutate(residual = pred_ind - observed_ind ) %>%
group_by(fleet_name, model) %>%
mutate(standardized_residual = residual / sd(residual)) %>%
filter(!is.na(standardized_residual)) %>%
ggplot() +
geom_hline(yintercept = 0,linetype = 2) +
geom_col(aes(x = year, y =standardized_residual, fill =model), position = position_dodge(width = 0.5)) +
facet_wrap(~ fleet_name, scales = "free_x") +
scale_x_continuous(name = "Year", guide = guide_axis(n.dodge = 2)) +
scale_y_continuous(name = "Standardized Residuals")
selectivities <- get_selectivities(mods)
plot_selectivities(selectivities)
selectivities <- get_selectivities(mods[1:2])
plot_selectivities(selectivities)
msy_my_results = get_msy_mt(mods)
obe(mods, engine = "ggplot")
kobe(mods, engine = "ggplot")
knitr::opts_knit$set(root.dir=here::here())
here()
here::here()
knitr::opts_knit$set(root.dir=here::here())
knitr::opts_chunk$set(warning=F, message=F, echo=F, results=F,fig.width=6, fig.height=5)
library(jjmR)
library(ggplot2)
library(tidyverse)
library(tidyr)
theme_set(theme_jjm(base_size = 15))
geth <- function(mod,h=hyp) paste0(h,"_", mod) # Package? Or keep?
hyp=1
m0 <- readJJM(geth("1.00"), path = "config", input = "input")
m0 <- readJJM(geth("1.00"), path = "config", input = "input")
m1 <- readJJM(geth("1.01"), path = "config", input = "input")
library(jjmR)
library(ggplot2)
library(tidyverse)
library(tidyr)
theme_set(theme_jjm(base_size = 15))
geth <- function(mod,h=hyp) paste0(h,"_", mod) # Package? Or keep?
hyp=1
m0 <- readJJM(geth("1.00"), path = "config", input = "input")
here::here()
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjm")
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../../src/jjm")
m1 <- runit(geth("1.01"),pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjms")
m1 <- runit(geth("1.01"),pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjms")
m1 <- runit(geth("1.01"),pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjm")
here::here()
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjm")
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjm")
library(jjmR)
library(ggplot2)
library(tidyverse)
library(tidyr)
theme_set(theme_jjm(base_size = 15))
# mod0.00 <- runit(geth("0.00"),pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjms")
getwd()
geth <- function(mod,h=hyp) paste0(h,"_", mod) # Package? Or keep?
hyp=1
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjms")
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../../src/jjm")
m0 <- runit(geth("1.00") ,pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjm")
m0 <- runit(geth("1.00") ,path="choki/config",pdf=TRUE,portrait=F,est=TRUE,exec="../src/jjm")
m0 <- runit(geth("1.00") ,path="choki/config",pdf=TRUE,portrait=F,est=TRUE,exec="src/jjm")
m0 <- runit(geth("1.00") ,path="choki/config",input="choki/input",pdf=TRUE,portrait=F,est=TRUE,exec="src/jjm")
